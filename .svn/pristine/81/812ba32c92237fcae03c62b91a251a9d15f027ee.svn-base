package com.tanlian.wallet.widget;

import android.app.Activity;
import android.content.Context;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.ColorDrawable;
import android.os.Build;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.PopupWindow;

import com.tanlian.wallet.R;
import com.tanlian.wallet.utils.OsUtils;

import java.lang.reflect.Field;


/***
 * 功能描述:PopupWindow，增加显示和移除的监听回调，
 *           解决7.0showAsDropDown的显示问题
 * 作者:qiujialiu
 * 时间:2017/6/8
 ***/

public class MPopupWindow extends PopupWindow {
    private IShowListener mListener;
    private Activity context;
    private boolean isShowBg = true;

    public MPopupWindow(Context context) {
        super(context);
    }

    public MPopupWindow(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public MPopupWindow(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
    }

    public MPopupWindow(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
        super(context, attrs, defStyleAttr, defStyleRes);
    }

    public MPopupWindow() {
    }

    public MPopupWindow(View contentView) {
        super(contentView);
    }

    public MPopupWindow(int width, int height) {
        super(width, height);
    }

    public MPopupWindow(View contentView, int width, int height) {
        super(contentView, width, height);
    }

    public MPopupWindow(View contentView, int width, int height, boolean focusable) {
        super(contentView, width, height, focusable);
    }

    public void setShowListener(IShowListener listener){
        this.mListener = listener;
    }
    public interface IShowListener{
        void onShow();
        void onDismiss();
    }


    @Override
    public void dismiss() {
        super.dismiss();
        if (mListener!=null){
            mListener.onDismiss();
        }
        if (isShowBg) {
            backgroundAlpha(context, 1);
        }
    }


    @Override
    public void showAsDropDown(View anchor, int xoff, int yoff, int gravity) {

        // 7.0 以下或者高度为WRAP_CONTENT, 默认显示
        if (Build.VERSION.SDK_INT < 24 || getHeight() == ViewGroup.LayoutParams.WRAP_CONTENT) {
            showCompatSuper(anchor, xoff, yoff, gravity);
        } else {
            if (getContentView().getContext() instanceof Activity) {
                Activity activity = (Activity) getContentView().getContext();
                int screenHeight;
                // 获取屏幕真实高度, 减掉虚拟按键的高度
                screenHeight = OsUtils.getContentHeight(activity);
                int[] location = new int[2];
                // 获取控件在屏幕的位置
                anchor.getLocationOnScreen(location);
                // 算出popwindow最大高度
                int maxHeight = screenHeight - location[1] - anchor.getHeight();
                // popupwindow  有具体的高度值，但是小于anchor下边缘与屏幕底部的距离， 正常显示
                if(getHeight() > 0 && getHeight() < maxHeight){
                    showCompatSuper(anchor, xoff, yoff, gravity);
                }else {
                    // match_parent 或者 popwinddow的具体高度值大于anchor下边缘与屏幕底部的距离， 都设置为最大可用高度
                    setHeight(maxHeight);
                    showCompatSuper(anchor, xoff, yoff, gravity);
                }

            }
        }
    }

    // 解决andorid4.3及以下异常 java.lang.NoSuchMethodError: android.widget.PopupWindow.showAsDropDown
    private void showCompatSuper(View anchor, int xoff, int yoff, int gravity) {
        if (Build.VERSION.SDK_INT > 18)
            super.showAsDropDown(anchor, xoff, yoff, gravity);
        else
            super.showAsDropDown(anchor, xoff, yoff);
    }

    public MPopupWindow setCommonConfig(Activity context) {
        setFocusable(true);// 取得焦点
        setAnimationStyle(R.style.dialog_topleft_bottomright_animation);
        //注意  要是点击外部空白处弹框消息  那么必须给弹框设置一个背景色  不然是不起作用的
        setBackgroundDrawable(new BitmapDrawable());
        //点击外部消失
        setOutsideTouchable(true);
        //设置可以点击
        setTouchable(true);
        this.context = context;
        return this;
    }

    public MPopupWindow setCommonConfig(Activity context, AnimaDirect direct) {
        return setConfig(context, direct,true);
    }

    public MPopupWindow setCommonConfig(Activity context, AnimaDirect direct, boolean transBg) {
        return setConfig(context, direct,transBg);
    }

    private MPopupWindow setConfig(Activity context, AnimaDirect direct, boolean show) {
        setFocusable(true);// 取得焦点
        isShowBg = show;
        if (direct == AnimaDirect.DIRECT_BOTTOM_TOP) {
            setAnimationStyle(R.style.dialog_bottom_top_animation);
        }else if (direct == AnimaDirect.DIRECT_RIGHTTOP_LEFTBOTTOM) {
            setAnimationStyle(R.style.dialog_topright_bottomleft_animation);
        }else if (direct == AnimaDirect.DIRECT_TOP_BOTTOM) {
            setAnimationStyle(R.style.dialog_top_bottom_animation);
        }else if (direct == AnimaDirect.DIRECT_RIGHT_LEFT) {
            setAnimationStyle(R.style.dialog_right_left_animation);
        }
        //注意  要是点击外部空白处弹框消息  那么必须给弹框设置一个背景色  不然是不起作用的
        setBackgroundDrawable(new BitmapDrawable());
        //点击外部消失
        setOutsideTouchable(true);
        //实例化一个ColorDrawable颜色为半透明
        ColorDrawable dw = new ColorDrawable(0x00000000);
        //设置SelectPicPopupWindow弹出窗体的背景
        this.setBackgroundDrawable(dw);
        if (show) {
            backgroundAlpha( context,0.4f);//0.0-1.0
        }
        //设置可以点击
        setTouchable(true);
        this.context = context;
        return this;
    }


    public enum  AnimaDirect {
        DIRECT_TOP_BOTTOM,DIRECT_LEFT_RIGHT,
        DIRECT_RIGHT_LEFT,DIRECT_BOTTOM_TOP,
        DIRECT_LEFTTOP_RIGHTBOTTOM,
        DIRECT_LEFTBOTTOM_RIGHTTOP,
        DIRECT_RIGHTTOP_LEFTBOTTOM,
        DIRECT_RIGHTBOTTOM_LEFTTOP,
        DIRECT_NORMAL
    }

    /**
     * 设置添加屏幕的背景透明度
     * @param bgAlpha
     */
    private void backgroundAlpha(Activity context, float bgAlpha)
    {
        if (context == null)return;
        WindowManager.LayoutParams lp = context.getWindow().getAttributes();
        lp.alpha = bgAlpha;
        context.getWindow().addFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);
        //context.getWindow().addFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);
        context.getWindow().setAttributes(lp);
    }

    public boolean fitPopupWindowOverStatusBar(boolean needFullScreen) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            try {
                Field mLayoutInScreen = PopupWindow.class.getDeclaredField("mLayoutInScreen");
                mLayoutInScreen.setAccessible(true);
                mLayoutInScreen.set(MPopupWindow.this, needFullScreen);
                return true;
            } catch (NoSuchFieldException e) {
                e.printStackTrace();
            } catch (IllegalAccessException e) {
                e.printStackTrace();
            }catch (Exception e) {
                e.printStackTrace();
            }
        }
        return false;
    }

}
