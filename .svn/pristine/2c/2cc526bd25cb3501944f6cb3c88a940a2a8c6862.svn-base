package com.tanlian.wallet.user;

import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.TextPaint;
import android.text.style.ClickableSpan;
import android.text.style.ForegroundColorSpan;
import android.view.View;

import com.tanlian.wallet.base.BaseContract;
import com.tanlian.wallet.base.bean.BaseMode;
import com.tanlian.wallet.net.RetrofitManger;
import com.tanlian.wallet.user.bean.SelfInfo;
import com.tanlian.wallet.user.interfaces.GetSelfInfoResult;
import com.tanlian.wallet.utils.RxSchedulers;

import io.reactivex.functions.Consumer;

/**
 * 类说明：
 * 作者：qiujialiu
 * 时间：2019/2/25
 */

public class SelfInfoServer {
    public static void getUserInfo(BaseContract.BaseView mView, GetSelfInfoResult result) {
        RetrofitManger.getInstance().create().getSelfInfo().compose(RxSchedulers.applySchedulers())
                .compose(mView.bindToLife())
                .subscribe(new Consumer<BaseMode<SelfInfo>>() {
                    @Override
                    public void accept(BaseMode<SelfInfo> selfInfoBaseMode) throws Exception {
                        if(selfInfoBaseMode.isSuccess()) {
                            SelfInfo selfInfo = selfInfoBaseMode.getResult();
                            selfInfo.initResult();
                            if (result != null) {
                                result.getSuccess(selfInfo);
                            }
//                            responseReveived(selfInfo);
//                            mView.hideDialog();
//                            LogUtils.e("=====>请求个人信息成功 " + selfInfo.toString());
                        } else {
                            if (result != null) {
                                result.getFail(0,selfInfoBaseMode.getError().getMessage());
                            }
//                            mView.hideDialog();
//                            mView.showErrorToast("请求个人信息失败");
//                            LogUtils.e("=====>请求个人信息失败 " + selfInfoBaseMode.getError().getMessage());
                        }
                    }
                }, new Consumer<Throwable>() {
                    @Override
                    public void accept(Throwable throwable) throws Exception {
                        if (result != null) {
                            result.getError(throwable);
                        }
//                        mView.hideDialog();
//                        mView.showErrorToast("请求个人信息失败");
//                        LogUtils.e("=====>请求个人信息失败 " + throwable.getMessage());
                    }
                });
    }

    public static CharSequence getPayunBindString(Context context) {
        SpannableString spannableString = new SpannableString("账号未绑定");
        spannableString.setSpan(new ForegroundColorSpan(Color.parseColor("#00b200")),2,5, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        spannableString.setSpan(new ClickableSpan() {
            @Override
            public void onClick(View widget) {
//                Intent intent = new Intent(context, SelfInfoActivity.class);
//                context.startActivity(intent);
            }
            @Override
            public void updateDrawState(TextPaint ds) {
                super.updateDrawState(ds);
                ds.setUnderlineText(false);
            }
        },2,5, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
        return spannableString;
    }
}
