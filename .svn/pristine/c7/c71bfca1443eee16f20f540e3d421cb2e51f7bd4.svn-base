package com.tanlian.wallet.widget;

import android.annotation.SuppressLint;
import android.annotation.TargetApi;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Build;
import android.util.AttributeSet;
import android.util.Log;
import android.webkit.ConsoleMessage;
import android.webkit.GeolocationPermissions;
import android.webkit.ValueCallback;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebView;

/***
 * 功能描述:
 * 作者:qiujialiu
 * 时间:2017/6/20
 ***/

public class MWebView extends WebView {
    private static final String TAG = "YSDHWebView";
    public static final int FILECHOOSER_RESULTCODE = 0x11;
    public static final int REQUEST_SELECT_FILE = 0x12;

    private String baseUrl;
    private String currentUrl;
    //使webview兼容 <input type="file" name="uploadfile"> 标签的回调
    private ValueCallback<Uri[]> mFilePathCallback;
    private ValueCallback<Uri> mUploadMessage;
    private String mCameraPhotoPath;

    public MWebView(Context context) {
        super(context);
        init();
    }

    public MWebView(Context context, AttributeSet attrs) {
        super(context, attrs);
        init();
    }

    public MWebView(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
        init();
    }

    public void setBaseUrl(String baseUrl) {
        this.baseUrl = baseUrl;
    }

    public String getBaseUrl() {
        return baseUrl;
    }

    @SuppressLint("NewApi")
    private void init() {
        WebSettings wSet = getSettings();
        wSet.setJavaScriptEnabled(true);
        wSet.setDomStorageEnabled(true); // 开启 DOM storage API 功能
        wSet.setDatabaseEnabled(false);   //开启 database storage API 功能
        wSet.setAppCacheEnabled(true);//开启 Application Caches 功能
        wSet.setGeolocationEnabled(true);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            //支持https网页里引用http的资源
            wSet.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);
        }

        setWebChromeClient(new WebChromeClient(){
            @Override
            public boolean onConsoleMessage(ConsoleMessage consoleMessage) {
                Log.d(TAG, "webview =====>onConsoleMessage: "+consoleMessage.message());
                return super.onConsoleMessage(consoleMessage);
            }

            protected void openFileChooser(ValueCallback uploadMsg, String acceptType) {
                mUploadMessage = uploadMsg;
                Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
                intent.addCategory(Intent.CATEGORY_OPENABLE);
                intent.setType("*/*");
                ((Activity)getContext()).startActivityForResult(Intent.createChooser(intent, "File Browser"), FILECHOOSER_RESULTCODE);
            }

            //使webview兼容 <input type="file" name="uploadfile"> 标签
            @Override
            public boolean onShowFileChooser(WebView webView, ValueCallback<Uri[]> filePathCallback, FileChooserParams fileChooserParams) {
                if (mFilePathCallback != null) {
                    mFilePathCallback.onReceiveValue(null);
                    mFilePathCallback = null;
                }

                mFilePathCallback = filePathCallback;

                //Intent intent = fileChooserParams.createIntent();
                Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
                intent.addCategory(Intent.CATEGORY_OPENABLE);
                intent.setType("*/*");
                try
                {
                    ((Activity)getContext()).startActivityForResult(intent, REQUEST_SELECT_FILE);
                } catch (Exception e)
                {
                    mFilePathCallback = null;
                    return false;
                }
                return true;
            }

            //For Android 4.1 only
            protected void openFileChooser(ValueCallback<Uri> uploadMsg, String acceptType, String capture)
            {
                mUploadMessage = uploadMsg;
                Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
                intent.addCategory(Intent.CATEGORY_OPENABLE);
                intent.setType("*/*");
                ((Activity)getContext()).startActivityForResult(Intent.createChooser(intent, "File Browser"), FILECHOOSER_RESULTCODE);
            }

            protected void openFileChooser(ValueCallback<Uri> uploadMsg)
            {
                mUploadMessage = uploadMsg;
                Intent i = new Intent(Intent.ACTION_PICK);
                i.addCategory(Intent.CATEGORY_OPENABLE);
                i.setType("image/*");
                ((Activity)getContext()).startActivityForResult(Intent.createChooser(i, "File Chooser"), FILECHOOSER_RESULTCODE);
            }

            @Override
            public void onGeolocationPermissionsShowPrompt(String origin, GeolocationPermissions.Callback callback) {
                super.onGeolocationPermissionsShowPrompt(origin, callback);
                callback.invoke(origin,true,false);
            }
        });

    }

    @TargetApi(Build.VERSION_CODES.LOLLIPOP)
    public MWebView(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
        super(context, attrs, defStyleAttr, defStyleRes);
        init();
    }

    public String getCurrentUrl() {
        return currentUrl;
    }

    public ValueCallback<Uri[]> getFilePathCallback() {
        return mFilePathCallback;
    }

    public ValueCallback<Uri> getUploadMessage() {
        return mUploadMessage;
    }

    public void setFilePathCallBack(ValueCallback<Uri[]> callBack) {
        this.mFilePathCallback = callBack;
    }

    public void setUploadMessage(ValueCallback<Uri> callback) {
        this.mUploadMessage = callback;
    }

}
