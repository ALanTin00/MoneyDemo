package com.tanlian.wallet.manager.tecentali;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.text.TextUtils;
import android.widget.Toast;

import com.blankj.utilcode.util.LogUtils;
import com.blankj.utilcode.util.NetworkUtils;
import com.blankj.utilcode.util.ToastUtils;
import com.tanlian.wallet.constant.Constant;
import com.tanlian.wallet.constant.TypeConstant;
import com.tanlian.wallet.manager.AccountManager;
import com.tanlian.wallet.manager.tecentali.bean.CallBack;
import com.tanlian.wallet.manager.tecentali.bean.LoginResultBean;
import com.tencent.mm.opensdk.modelbase.BaseReq;
import com.tencent.mm.opensdk.modelbiz.WXLaunchMiniProgram;
import com.tencent.mm.opensdk.modelpay.PayReq;
import com.tencent.mm.opensdk.openapi.IWXAPI;
import com.tencent.mm.opensdk.openapi.WXAPIFactory;
import com.umeng.socialize.UMAuthListener;
import com.umeng.socialize.UMShareAPI;
import com.umeng.socialize.UMShareConfig;
import com.umeng.socialize.bean.SHARE_MEDIA;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.reactivex.Observable;
import io.reactivex.ObservableEmitter;
import io.reactivex.ObservableOnSubscribe;
import io.reactivex.android.schedulers.AndroidSchedulers;
import io.reactivex.functions.Consumer;
import io.reactivex.schedulers.Schedulers;

import static com.tanlian.wallet.constant.TypeConstant.TYPE_ACTIVITY_NULL;


/***
 * 功能描述:腾讯阿里登录和支付相关管理器
 * 作者:qiujialiu
 * 时间:
 ***/

public final class TecentALiManager {
    private static final String TAG = "TecentALiManager";
    //private List<PayResultListener> listeners;
    private IWXAPI mWeChat;
    private Context context;
    private Map<String, PayResultListener> listenerMap;
    private String currentPayTag;

    private TecentALiManager(){}


    static class PayManagerHolder{
        public static final TecentALiManager INSTANCE = new TecentALiManager();
    }

    public static TecentALiManager getInstance() {
        return PayManagerHolder.INSTANCE;
    }

    public void init(Context context) {
        this.context = context;
        this.mWeChat = WXAPIFactory.createWXAPI(context,null);
        this.mWeChat.registerApp(Constant.WECHAT_APPID);
    }

    public void sendWechat(BaseReq req) {
        mWeChat.sendReq(req);
    }

    public void startWechatServer(Activity activity) {
        //https://weixin.qq.com/r/ii4MFNvEHYZirZ9393uY

//        try {
//            Intent intent = new Intent(Intent.ACTION_VIEW);
//            intent.setData(Uri.parse("https://weixin.qq.com/r/ii4MFNvEHYZirZ9393uY")); //设置要传递的内容。
//            //intent.setPackage("com.tencent.mm"); //直接制定要发送到的程序的包名。也可以不制定。就会弹出程序选择器让你手动选木程序。
//            intent.putExtra(Intent.EXTRA_SUBJECT,"Share");
//            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
//            activity.startActivity(intent); //当然要在Activity界面 调用了。
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//        mWeChat.openWXApp();
//        SubscribeMessage.Req req = new SubscribeMessage.Req();
//        req.scene = 20;
//        req.templateID = "6inIhhSrMYKAD-q5ZQCoONHLiUlVaPyadU0P1cZhQuk";
//        req.reserved = DeviceUtils.getMacAddress()+"123"+"wx";
//        TecentALiManager.getInstance().sendWechat(req);

        if (mWeChat.isWXAppInstalled()) {
            mWeChat.openWXApp();
        } else {
            Toast.makeText(context, "请先安装微信", Toast.LENGTH_SHORT).show();
        }
    }

    /**
     * 打开车碳宝小程序
     */
    public void startSApp() {
//        String appId = "wxd930ea5d5a258f4f"; // 填应用AppId
//        IWXAPI api = WXAPIFactory.createWXAPI(context, appId);
        if (mWeChat.isWXAppInstalled()) {
            if (AccountManager.getInstance().getActType() == TYPE_ACTIVITY_NULL) {
                WXLaunchMiniProgram.Req req = new WXLaunchMiniProgram.Req();
                req.userName = "gh_b223c31a8fcb"; // 填小程序原始id
                ///pages/mydetail/detail?token=''&timestamp=''&usertype=''
                req.path = "/packageA/index/index?token=" + AccountManager.getInstance().getAccessToken() + "&timestamp=" +
                        System.currentTimeMillis() + "&usertype=" + AccountManager.getInstance().getActType();//拉起小程序页面的可带参路径，不填默认拉起小程序首页
                req.miniprogramType = WXLaunchMiniProgram.Req.MINIPTOGRAM_TYPE_RELEASE;// 可选打开 开发版，体验版和正式版
                //req.miniprogramType = WXLaunchMiniProgram.Req.MINIPROGRAM_TYPE_PREVIEW;// 可选打开 开发版，体验版和正式版
                mWeChat.sendReq(req);
            } else {
                WXLaunchMiniProgram.Req req = new WXLaunchMiniProgram.Req();
                req.userName = "gh_b223c31a8fcb"; // 填小程序原始id
                ///pages/mydetail/detail?token=''&timestamp=''&usertype=''
                req.path = "/packageA/index/index?token=" + AccountManager.getInstance().getAccessToken() + "&timestamp=" +
                        System.currentTimeMillis() + "&usertype=" + AccountManager.getInstance().getActType();//拉起小程序页面的可带参路径，不填默认拉起小程序首页
                req.miniprogramType = WXLaunchMiniProgram.Req.MINIPTOGRAM_TYPE_RELEASE;// 可选打开 开发版，体验版和正式版
                //  req.miniprogramType = WXLaunchMiniProgram.Req.MINIPROGRAM_TYPE_PREVIEW;// 可选打开 开发版，体验版和正式版
                mWeChat.sendReq(req);
            }
        } else {
            Toast.makeText(context, "请先安装微信", Toast.LENGTH_SHORT).show();
        }

    }

    /**
     * 移除支付结果回调
     * @param listener
     */
    public void removePayResultListener(PayResultListener listener) {
//        if (listeners != null) {
//            listeners.remove(listener);
//        }
        if (listenerMap != null && listenerMap.containsValue(listener)) {
            Set<String> keys = listenerMap.keySet();
            if (keys != null && keys.size() > 0) {
                for (String key : keys) {
                    if (listenerMap.get(key) == listener) {
                        listenerMap.remove(listener);
                    }
                }
            }
        }
    }

    /**
     * 设置支付结果回调
     * @param listener
     */
    public void addPayResultListener(PayResultListener listener, Activity activity) {
        if (listener == null) {
            return;
        }
        if (listenerMap == null) {
            listenerMap = new HashMap<>();
        }
        listenerMap.put(activity.getClass().getCanonicalName(),listener);
//        if (listeners == null) {
//            listeners = new ArrayList<>();
//        }
//        listeners.clear();
//        listeners.add(listener);
    }

    public interface PayResultListener {
        void paySuccess();
        void payFail(int code, String message);
    }

    /**
     * 支付成功通知
     */
    public void paySuccess() {
        if (listenerMap != null) {
            if (!TextUtils.isEmpty(currentPayTag) && listenerMap.get(currentPayTag) != null){
                listenerMap.get(currentPayTag).paySuccess();
            }else {
                Set<String> keys = listenerMap.keySet();
                if (keys != null && keys.size() > 0) {
                    for (String key : keys) {
                       listenerMap.get(key).paySuccess();
                    }
                }
            }

        }
    }

    public void openByQQ(Context context, String qqNumber) {
        if (isQQClientAvailable(context)) {
            String url = "mqqwpa://im/chat?chat_type=wpa&uin=" + qqNumber;
            context.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(url)));
        }else {
            ToastUtils.showShort("还未安装QQ客户端");
        }
    }

    public static boolean isQQClientAvailable(Context context) {
        final PackageManager packageManager = context.getPackageManager();
        List<PackageInfo> pinfo = packageManager.getInstalledPackages(0);
        if (pinfo != null) {
            for (int i = 0; i < pinfo.size(); i++) {
                String pn = pinfo.get(i).packageName;
                if (pn.equals("com.tencent.mobileqq")) {
                    return true;
                }
            }
        }
        return false;
    }

    /**
     * QQ登录
     * @param activity
     * @param callback
     */
    public void tencentAuthorized(Activity activity, CallBack<LoginResultBean> callback) {
        UMShareConfig config = new UMShareConfig();
        config.isNeedAuthOnGetUserInfo(true);
        UMShareAPI.get(activity).setShareConfig(config);
        if (NetworkUtils.isConnected() ){
            UMShareAPI.get(context).getPlatformInfo(activity, SHARE_MEDIA.QQ, new UMAuthListener() {
                @Override
                public void onStart(SHARE_MEDIA share_media) {

                }

                @Override
                public void onComplete(SHARE_MEDIA share_media, int i, Map<String, String> map) {
                    if (map != null) {
                        LoginResultBean bean = new LoginResultBean();
                        bean.setAvatar(map.get("iconurl"));
                        bean.setSex(map.get("gender"));
                        bean.setNickName(map.get("name"));
                        bean.setOpenId(map.get("openid"));
                        bean.setLoginType(TypeConstant.LOGIN_TYPE_QQ);
                        if (callback != null) {
                            callback.onSuccess(bean);
                        }
                    }
                }

                @Override
                public void onError(SHARE_MEDIA share_media, int i, Throwable throwable) {
                    if (callback != null) {
                        if (throwable.getMessage().contains("没有安装应用")) {
                            callback.onFailed(i, "没有安装应用，请先安装。");
                        } else if (throwable.getMessage().contains("获取用户资料失败")) {
                            callback.onFailed(i, "授权失败，请检查您的网络");
                        } else {
                            callback.onFailed(i, throwable.getMessage());
                        }
                    }
                }

                @Override
                public void onCancel(SHARE_MEDIA share_media, int i) {
                    if (callback != null) {
                        callback.onFailed(i, "取消登录");
                    }
                }
            });
        }else {
            if (callback != null) {
                callback.onFailed(0, "授权失败，网络未连接");
            }
        }
    }


    /**
     * 微信登录
     * @param activity
     * @param callback
     */
    public void wechatAuthorized(Activity activity, final CallBack callback) {
        UMShareConfig config = new UMShareConfig();
        config.isNeedAuthOnGetUserInfo(true);
        UMShareAPI.get(activity).setShareConfig(config);
        if (NetworkUtils.isConnected()) {
            UMShareAPI.get(context).getPlatformInfo(activity, SHARE_MEDIA.WEIXIN, new UMAuthListener() {
                @Override
                public void onStart(SHARE_MEDIA share_media) {

                }

                @Override
                public void onComplete(SHARE_MEDIA share_media, int i, Map<String, String> map) {
                    if (map != null) {
                        LoginResultBean bean = new LoginResultBean();
                        bean.setAvatar(map.get("iconurl"));
                        bean.setSex(map.get("gender"));
                        bean.setNickName(map.get("name"));
                        bean.setOpenId(map.get("openid"));
                        bean.setUid(map.get("uid"));
                        bean.setLoginType(TypeConstant.LOGIN_TYPE_WECHAT);
                        if (callback != null) {
                            callback.onSuccess(bean);
                        }
                    }
                }

                @Override
                public void onError(SHARE_MEDIA share_media, int i, Throwable throwable) {
                    if (callback != null) {
                        if (throwable.getMessage().contains("没有安装应用")) {
                            callback.onFailed(i, "没有安装应用，请先安装。");
                        } else if (throwable.getMessage().contains("获取用户资料失败")) {
                            callback.onFailed(i, "授权失败，请检查您的网络");
                        } else {
                            callback.onFailed(i, throwable.getMessage());
                        }
                    }
                }

                @Override
                public void onCancel(SHARE_MEDIA share_media, int i) {
                    if (callback != null) {
                        callback.onFailed(i, "取消登录");
                    }
                }
            });
        }else {
            if (callback != null) {
                callback.onFailed(0, "授权失败，网络未连接");
            }
        }
    }


    /**
     * 支付失败通知
     * @param code
     * @param message
     */
    public void payFail(int code , String message) {
        if (listenerMap != null) {
            if (!TextUtils.isEmpty(currentPayTag) && listenerMap.get(currentPayTag) != null){
                listenerMap.get(currentPayTag).payFail(code,message);
            }else {
                Set<String> keys = listenerMap.keySet();
                if (keys != null && keys.size() > 0) {
                    for (String key : keys) {
                        listenerMap.get(key).payFail(code, message);
                    }
                }
            }

        }
    }
    /**
     * 微信支付
     * @param
     * @param
     */
    public void payByWechat(Activity context,WXPayParamsBean payParamsBean,String type, CallBack callBack) {
        currentPayTag = context.getClass().getCanonicalName();
        weiXinPay(payParamsBean.getPartnerid(),
                payParamsBean.getPrepayid(),
                payParamsBean.getNoncestr(),
                payParamsBean.getTimestamp() ,
                payParamsBean.getSign(),callBack);
    }

    /**
     *
     * @param partnerid appid
     * @param prepayid 会话id
     * @param noncestr 随机串
     * @param sign 签名
     */
    private void weiXinPay(String partnerid, String prepayid, String noncestr, String timeStamp, String sign,CallBack result){
        PayReq req = new PayReq();
        req.appId = Constant.WECHAT_APPID;
        LogUtils.w("微信支付appid:"+req.appId);
        req.partnerId = partnerid;
        req.prepayId = prepayid;
        req.packageValue = "Sign=WXPay";
        req.nonceStr = noncestr;
        req.timeStamp = timeStamp;
        req.sign = sign;
        boolean success = mWeChat.sendReq(req);
        if (!success) {
            if (result != null) {
                result.onFailed(0, "调起微信支付失败");
            }
        }
    }

}
