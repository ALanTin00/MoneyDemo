package com.tanlian.wallet.widget.loopviewpager;

import android.content.Context;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.NonNull;
import android.support.v4.view.ViewPager;
import android.util.AttributeSet;

import java.lang.ref.WeakReference;

/**
 * 类说明：
 * 作者：qiujialiu
 * 时间：2019/4/16
 */

public class AutoLoopViewPager extends ViewPager {
    private long delayTime = 6000;
    private boolean isStart = false;//是否轮播中
    private MHandler mHandler = new MHandler(this);
    private int pageCount;
    private boolean autoScroll = true;

    public AutoLoopViewPager(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public AutoLoopViewPager(@NonNull Context context) {
        super(context);
    }

    private static class MHandler extends Handler {
        WeakReference<? extends AutoLoopViewPager> reference;

        MHandler(AutoLoopViewPager pager) {
            reference = new WeakReference<>(pager);
        }

        @Override
        public void handleMessage(Message msg) {
            AutoLoopViewPager pager = reference.get();
            if (pager != null && msg.what == 1) {
                if (pager.autoScroll) {
                    if (pager.getAdapter().getCount() > 0) {
                        int index = pager.getCurrentItem();
                        index++;
                        pager.setCurrentItem(index);
                    }
                    Message msg2 = Message.obtain();
                    msg2.what = 1;
                    sendMessageDelayed(msg2, pager.delayTime);
                }
            }
        }
    }

    public void startScroll(){
        if(!isStart){
            isStart = true;
            Message msg = Message.obtain();
            msg.what=1;
            mHandler.sendMessageDelayed(msg,delayTime);
        }
    }

    /**
     * 停止轮播
     */
    public void stopScroll(){
        if(isStart){
            isStart = false;
            //清除所有的消息
            mHandler.removeCallbacksAndMessages(null);
        }
    }

}
